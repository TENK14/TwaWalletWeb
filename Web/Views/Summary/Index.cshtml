@model IEnumerable<TwaWallet.Web.Models.SummaryViewModels.SummaryVM>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Summary</h2>

<span>
    <form asp-action="Index" method="get">
        <div class="form-actions no-color">
            
            <span @*class="visible-lg-inline-block" *@>Od: </span>
            <input type="Date" @*class="visible-lg-inline-block" *@ name="DateFrom" value="@ViewBag.DateFrom?.Date?.ToString("yyyy-MM-dd")" />
            <span @*class="visible-lg-inline-block" *@>Do: </span>
            <input type="Date" @*class="visible-lg-inline-block" *@ name="DateTo" value="@ViewBag.DateTo?.Date?.ToString("yyyy-MM-dd")" />
            <br />
            <span>Earnings: </span>
            <input type="checkbox" name="Earnings" value="true" checked="@ViewBag.Earnings" />
            <input type="submit" value="Show" class="btn btn-default" />
            <br />
        </div>
    </form>
    @*https://www.tuomistolari.net/blog/2013/10/24/razor-sharp-csv-generation.html*@
    @*https://docs.microsoft.com/en-us/aspnet/core/mvc/views/razor?view=aspnetcore-2.1*@
    @*https://stackoverflow.com/questions/33431282/asp-net-mvc-proper-usage-of-view-model-and-command-pattern*@
    @*<button type="button" name="btnExport" onclick="exportClick" value="Export" />*@
</span>
<span>
    <span>Balance: </span>
    <span> 
        @if (ViewBag.Earnings)
        {
            @string.Format("{0:C}", Model.Sum(m => m.Expenses + m.Earnings));
        }
        else
        {
            @string.Format("{0:C}", Model.Sum(m => m.Expenses));
        }
    </span>
</span>


<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Period)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Expenses)
            </th>
            @if (ViewBag.Earnings)
            {
                <th>
                    @Html.DisplayNameFor(model => model.Earnings)
                </th>
            }
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Period)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Expenses)
                </td>
                @if (ViewBag.Earnings)
                {
                    <td>
                        @Html.DisplayFor(modelItem => item.Earnings)
                    </td>
                }
            </tr>
        }
    </tbody>
</table>
